# Ref.: https://github.com/EventStore/samples/blob/main/Logging/Elastic/Filebeat/docker-compose.yml
# map logs to disk location and share between containers
x-eventstore-volume-logs:
  &eventstore-volume-logs
  type: bind
  source: ./test/log/siga/sigaex
  target: /var/log/siga/sigaex

version: "2.4"

volumes:
  elasticsearch-volume:
    driver: local
  log-volume:
    driver: local
networks:
  elk_network:
    driver: bridge

services:
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    hostname: elasticsearch
    environment:
      - TZ=America/Sao_Paulo
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch-volume:/usr/share/elasticsearch/data:z
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elk_network
    healthcheck:
      test:
          [
          "CMD-SHELL",
          "curl --fail http://localhost:9200 || exit 1",
          ]
      interval: 10s
      timeout: 10s
      retries: 120
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    ports:
      - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_healthy    
    environment:
      - TZ=America/Sao_Paulo
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    networks:
      - elk_network
    healthcheck:
      test:
          [
          "CMD-SHELL",
          "curl --fail http://localhost:5601 || exit 1",
          ]
      interval: 10s
      timeout: 10s
      retries: 120
  # initializer:
  #   container_name: curl
  #   image: curlimages/curl
  #   restart: on-failure
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy
  #   networks:
  #     - elk_network